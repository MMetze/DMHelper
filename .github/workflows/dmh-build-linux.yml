name: DMHelper CI Linux Workflow

on:
  workflow_dispatch:

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION: 6.6.0
  QT_INSTALLER_VERSION: 4.7
  # INSTALLERARTIFACT: DMHelper-64-bit-release-Installer.exe
  ZIPARTIFACT: DMHelper-linux-64-bit-release.zip

jobs:
  build-DMH-linux:

    runs-on: ubuntu-20.04

    steps:
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        aqtversion: '==3.1.*'
        version: '6.6.0'
        host: 'linux'
        target: 'desktop'
        arch: 'gcc_64'
        cache: 'true'
        modules: 'qtimageformats qtmultimedia qtnetworkauth'
        tools: 'tools_ifw'
        archives: 'qttranslations qttools qtsvg qtbase icu'
        
    - name: Check out the DMHelper source tree
      uses: actions/checkout@v3
    
    - name: Print current working dir
      run: |
        echo Workspace is: ${{ github.workspace }}
        cd DMHelper
        # ls ${{env.Qt6Dir}}
        # echo ######## Qt directory tree ##########
        # tree ${{ runner.workspace }}/Qt
        # echo ######## DMH source tree ##########
        tree ${{ runner.workspace }}/DMHelper
         
    #
    # Install additional dependencies, from:
    # https://github.com/mapeditor/tiled/blob/master/.github/workflows/packages.yml
    #
    - name: Install dependencies
      run: |
        sudo add-apt-repository ppa:videolan/master-daily # Get LibVLC v4.0 from a private archive
        sudo apt update
        sudo apt list -a libvlc-dev
        sudo apt install libvlc-dev
        
    - name: Set up environment for build
      run: |
        cd DMHelper
        mkdir -p {build-64_bit-release,bin64/config,bin64/packages/com.dmhelper.app/{meta,data}}
        cp -aRv ./src/installer/. ./bin64
        mv ./bin64/packages/com.dmhelper.app/meta/installscript64.qs ./bin64/packages/com.dmhelper.app/meta/installscript.qs
        ls -alR ./bin64

    - name: Build DMHelper for Linux
      run: |
        cd DMHelper
        cd build-64_bit-release
        which qmake
        qmake ../src/DMHelper.pro -spec linux-g++-64 "CONFIG+=qtquickcompiler" 
        make

    - name: Copy binary resources
      run: |
        cd DMHelper
        cd build-64_bit-release
        tree ${{ runner.workspace }}/DMHelper/build-64_bit-release
        cp -av ./DMHelper ../bin64/packages/com.dmhelper.app/data
        # cp -aRv ../src/bin-win64/. ../bin64/packages/com.dmhelper.app/data
        cp -aRv ../src/bestiary/. ../bin64/packages/com.dmhelper.app/data/resources
        cp -aRv ../src/doc/. ../bin64/packages/com.dmhelper.app/data/doc
        cp -aRv ../src/resources/. ../bin64/packages/com.dmhelper.app/data/resources

    - name: Call Deploy for Qt
      run: |
        cd DMHelper
        echo Deploy currently not executed
        # linuxdeployqt --compiler-runtime --no-opengl-sw --no-svg ./bin64/packages/com.dmhelper.app/data

    - name: Zip the build
      run:  |
        cd DMHelper
        7z a -tzip ${{ env.ZIPARTIFACT }} ./bin64/packages/com.dmhelper.app/data/*
    
    - name: Output the workspace directory tree contents
      run: |
        ls -al ./DMHelper
        ls -alR ./DMHelper/bin64

    - name: Save the zip file
      uses: actions/upload-artifact@master
      with:
        name: ${{ env.ZIPARTIFACT }}
        path: ${{ runner.workspace }}/DMHelper/${{ env.ZIPARTIFACT }}

