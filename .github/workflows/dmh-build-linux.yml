name: DMHelper CI Linux Workflow

on:
  workflow_dispatch:

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION: 6.6.0
  QT_INSTALLER_VERSION: 4.7
  # MSVC_VERSION: 2019
  # INSTALLERARTIFACT: DMHelper-64-bit-release-Installer.exe
  # ZIPARTIFACT: DMHelper-64-bit-release.zip

jobs:
  build-DMH-linux:

    runs-on: ubuntu-20.04

    steps:
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        aqtversion: '==3.1.*'
        version: '6.6.0'
        host: 'linux'
        target: 'desktop'
        arch: 'gcc_64'
        cache: 'true'
        modules: 'qtimageformats qtmultimedia qtnetworkauth'
        tools: 'tools_ifw'
        archives: 'qttranslations qttools qtsvg qtbase icu'
        
    - name: Check out the DMHelper source tree
      uses: actions/checkout@v3
    
    - name: Print current working dir
      run: |
        echo Workspace is: ${{ github.workspace }}
        ls DMHelper
        cd DMHelper
        pwd
        echo 'runner.workspace === ${{ runner.workspace }}'
        echo 'github.workspace === ${{ github.workspace }}'
        # ls ${{env.Qt6Dir}}
        echo ######## Qt directory tree ##########
        tree ${{ runner.workspace }}/Qt
        echo ######## DMH source tree ##########
        tree ${{ runner.workspace }}/DMHelper
        # Get-ChildItem -Recurse -Directory
        # echo ${{ runner.workspace }}\Qt\Tools\QtInstallerFramework\${{ env.QT_INSTALLER_VERSION }}\bin\binarycreator
        # cd ${{ runner.workspace }}\Qt\Tools\QtInstallerFramework\${{ env.QT_INSTALLER_VERSION }}\bin
        # Get-ChildItem -Recurse -Directory
        # echo STOP!
        # Dosomethingthatbreaks
         
    #
    # Install additional dependencies, from:
    # https://github.com/mapeditor/tiled/blob/master/.github/workflows/packages.yml
    #
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt install \
          # libicu-dev \
          libvlc-dev
        
    - name: Build DMHelper for Linux
      run: |
        cd DMHelper
        mkdir build-64_bit-release
        cd build-64_bit-release
        which qmake
        qmake ../src/DMHelper.pro -d -Wall -spec linux-g++-64 "CONFIG+=qtquickcompiler" 
        make

    - name: Copy binary resources
      run: |
        cd DMHelper
        cd build-64_bit-release
        ls
        cp ./release/DMHelper.exe ../bin64/packages/com.dmhelper.app/data
        # xcopy D:\a\DMHelper\Qt\6.6.0\msvc2019_64\bin\Qt6Xml.dll ..\bin64\packages\com.dmhelper.app\data\
        cp -r ../src/bin-win64/ ../bin64/packages/com.dmhelper.app/data
        cp -r ../src/bestiary/ ../bin64/packages/com.dmhelper.app/data/resources
        cp -r ../src/doc/ ../bin64/packages/com.dmhelper.app/data/doc
        cp -r ../src/resources/ ../bin64/packages/com.dmhelper.app/data/resources

    - name: Call Deploy for Qt
      run: |
        cd DMHelper
        cd build-64_bit-release
        linuxdeployqt --compiler-runtime --no-opengl-sw --no-svg ..\bin64\packages\com.dmhelper.app\data

    - name: Zip the build
      run:  |
        cd DMHelper
        7z a -tzip DMHelper-linux-64-bit-release.zip ./bin64/packages/com.dmhelper.app/data/*
    
    - name: Output the workspace directory tree contents
      run: |
        # Get-ChildItem -Recurse
        tree ${{ runner.workspace }}

    - name: Save the zip file
      uses: actions/upload-artifact@master
      with:
        name: ${{ env.ZIPARTIFACT }}
        path: ${{ github.workspace }}\DMHelper\${{ env.ZIPARTIFACT }}
